---
knitr:
  opts_chunk:
    dev: svglite
format:
  typst:
    keep-typst: true
---

```{r}
#| output: false
source("synthesis.R")
```

# Parameters and initial setup

```{r}
lambda <- 5 # Rationality parameter
n <- 3

cost_orig <- costp()
cost_neg_cheap <- costp(nNPsg = 0.1, nNPpl = 0.1)
cost <- costp(nNPsg = 0.1, nNPpl = 0.1, `!1` = 0.9, `n!1` = 1)

P_w_flat <- P_wp()
P_w_sg_odd <- P_wp(w1 = 1 / 10)
P_w_pl_odd <- P_wp(`w2+` = 1 / 10)
P_w_sg_odd_extreme <- P_wp(w1 = 1 / 1000)
P_w_pl_odd_extreme <- P_wp(`w2+` = 1 / 1000)

P_Q_flat <- P_Qp()
P_Q_Qml <- P_Qp(Qml = 10)
P_Q_Qex <- P_Qp(Qex = 10)
P_Q_Qfine <- P_Qp(Qfine = 10)

P_i_flat <- P_ip()
P_i_penalize_embedded <- P_ip(ExhExh = 1, ExhLit = 1.4, LitLit = 2)
P_i <- P_i_penalize_embedded
```

# Flat world and QuD priors

```{r}
P_w <- P_w_flat
P_Q <- P_Q_flat

check_Sn(n)
check_Ln(n)
check_Ln_w(n)
```

# Flat world priors, Qex bias

```{r}
P_w <- P_w_flat
P_Q <- P_Q_Qex

check_Sn(n)
check_Ln(n)
check_Ln_w(n)
```

# Flat world priors, Qml bias

```{r}
P_w <- P_w_flat
P_Q <- P_Q_Qml

check_Sn(n)
check_Ln(n)
check_Ln_w(n)
# check_Sn_w(2)
```

# nNPsg oddness (w1 biased against, Qex bias)

```{r}
P_w <- P_w_sg_odd
P_Q <- P_Q_Qex

check_Sn(n)
check_Ln(n)
check_Ln_w(n)
```

